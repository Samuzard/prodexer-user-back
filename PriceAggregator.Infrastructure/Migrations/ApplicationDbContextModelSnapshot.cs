// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PriceAggregator.Infrastructure;

#nullable disable

namespace PriceAggregator.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PriceAggregator.Core.Entities.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<long?>("FeatureId")
                        .HasColumnType("bigint");

                    b.Property<string>("IconAlt")
                        .HasColumnType("text");

                    b.Property<string>("IconPath")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<long>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<long>("TreeLevel")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FeatureId");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedBy = "admin",
                            IconAlt = "Scissors icon",
                            IconPath = "/images/category_icons/scissors.svg",
                            IsActive = false,
                            Name = "Shoes",
                            ParentId = 0L,
                            TreeLevel = 0L
                        },
                        new
                        {
                            Id = 2L,
                            CreatedBy = "admin",
                            IsActive = false,
                            Name = "Women's Shoes",
                            ParentId = 1L,
                            TreeLevel = 1L
                        },
                        new
                        {
                            Id = 3L,
                            CreatedBy = "admin",
                            IsActive = false,
                            Name = "Mens Shoes",
                            ParentId = 1L,
                            TreeLevel = 2L
                        },
                        new
                        {
                            Id = 4L,
                            CreatedBy = "admin",
                            IsActive = false,
                            Name = "Shirts",
                            ParentId = 0L,
                            TreeLevel = 0L
                        },
                        new
                        {
                            Id = 5L,
                            CreatedBy = "admin",
                            IsActive = false,
                            Name = "Women's Shirts",
                            ParentId = 3L,
                            TreeLevel = 1L
                        },
                        new
                        {
                            Id = 6L,
                            CreatedBy = "admin",
                            IsActive = false,
                            Name = "Mens Shirts",
                            ParentId = 3L,
                            TreeLevel = 2L
                        },
                        new
                        {
                            Id = 7L,
                            CreatedBy = "admin",
                            IsActive = false,
                            Name = "Jackets",
                            ParentId = 0L,
                            TreeLevel = 0L
                        },
                        new
                        {
                            Id = 8L,
                            CreatedBy = "admin",
                            IsActive = false,
                            Name = "Gaming",
                            ParentId = 0L,
                            TreeLevel = 0L
                        },
                        new
                        {
                            Id = 9L,
                            CreatedBy = "admin",
                            IsActive = false,
                            Name = "Smartphones",
                            ParentId = 0L,
                            TreeLevel = 0L
                        });
                });

            modelBuilder.Entity("PriceAggregator.Core.Entities.FeaturedItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("FeaturedItems", (string)null);
                });

            modelBuilder.Entity("PriceAggregator.Core.Entities.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<long?>("FeatureId")
                        .HasColumnType("bigint");

                    b.Property<string>("ImagePath")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("PriceUnit")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<decimal?>("Rating")
                        .HasColumnType("numeric");

                    b.Property<string>("StoreIconPath")
                        .HasColumnType("text");

                    b.Property<long>("StoreId")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("FeatureId");

                    b.HasIndex("StoreId");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CategoryId = 2L,
                            CreatedBy = "admin",
                            Name = "ADIDAS",
                            Price = 79.98m,
                            PriceUnit = "$",
                            StoreId = 1L,
                            Url = "https://www.amazon.com/Nike-Blazer-Jumbo-DN2158-White/dp/B09Q91N4Q7"
                        },
                        new
                        {
                            Id = 2L,
                            CategoryId = 3L,
                            CreatedBy = "admin",
                            Name = "NIKE",
                            Price = 180.00m,
                            PriceUnit = "$",
                            StoreId = 2L,
                            Url = "https://www.stirlingsports.co.nz/new/blazer-low-77-jumbo-mens-dn2158-101"
                        },
                        new
                        {
                            Id = 3L,
                            CategoryId = 5L,
                            CreatedBy = "admin",
                            Name = "ZEN",
                            Price = 100.00m,
                            PriceUnit = "$",
                            StoreId = 2L,
                            Url = "https://www.stirlingsports.co.nz/mens/clothing/tees-and-singlets/IL5172/Adventure-Volcano-Long-Sleeve-Tee.html"
                        },
                        new
                        {
                            Id = 4L,
                            CategoryId = 6L,
                            CreatedBy = "admin",
                            Name = "PUMA",
                            Price = 70.00m,
                            PriceUnit = "$",
                            StoreId = 1L,
                            Url = "https://www.amazon.com/Volcano-Adventure-Climate-Premium-T-Shirt/dp/B0BH88FLPM?customId=B0753883B1&customizationToken=MC_Assembly_1%23B0753883B1&th=1"
                        },
                        new
                        {
                            Id = 5L,
                            CategoryId = 7L,
                            CreatedBy = "admin",
                            Name = "HENI",
                            Price = 879.00m,
                            PriceUnit = "$",
                            StoreId = 1L,
                            Url = "https://www.amazon.com/GIGABYTE-G5-1920x1080-i5-12500H-KF-E3US333SH/dp/B0BVRGF3MR/ref=sr_1_8?keywords=gigabyte&qid=1694092757&s=pc&sprefix=gigabyte%2Caps%2C190&sr=1-8"
                        },
                        new
                        {
                            Id = 6L,
                            CategoryId = 8L,
                            CreatedBy = "admin",
                            Name = "ASUS",
                            Price = 879.00m,
                            PriceUnit = "$",
                            StoreId = 1L,
                            Url = "https://www.amazon.com/GIGABYTE-G5-1920x1080-i5-12500H-KF-E3US333SH/dp/B0BVRGF3MR/ref=sr_1_8?keywords=gigabyte&qid=1694092757&s=pc&sprefix=gigabyte%2Caps%2C190&sr=1-8"
                        },
                        new
                        {
                            Id = 7L,
                            CategoryId = 8L,
                            CreatedBy = "admin",
                            Name = "HP",
                            Price = 7287.15m,
                            PriceUnit = "$",
                            StoreId = 3L,
                            Url = "https://www.bestbuy.ca/en-ca/product/custom-gigabyte-aorus-15-laptop-intel-i7-12700h-32gb-ram-4tb-pcie-ssd-nvidia-rtx-3070-ti-15-6-win-10-pro/15997948"
                        },
                        new
                        {
                            Id = 8L,
                            CategoryId = 9L,
                            CreatedBy = "admin",
                            ImagePath = "https://cdn.mos.cms.futurecdn.net/yDn3ZSXu9eSBxmXQDZ4PCF-650-80.jpg.webp",
                            Name = "Apple - iPhone 15 128GB - Blue (AT&T)",
                            Price = 729.99m,
                            PriceUnit = "$",
                            StoreId = 3L,
                            Url = "https://www.bestbuy.com/site/apple-iphone-15-128gb-blue-at-t/6417993.p?skuId=6417993"
                        },
                        new
                        {
                            Id = 9L,
                            CategoryId = 9L,
                            CreatedBy = "admin",
                            ImagePath = "https://media.cnn.com/api/v1/images/stellar/prod/230919073346-iphone-15-review-cnnu-1.jpg?c=16x9",
                            Name = "Apple iphone 15 (128gb) - black ",
                            Price = 720m,
                            PriceUnit = "$",
                            StoreId = 1L,
                            Url = "https://www.amazon.fr/Apple-iPhone-15-128-Go/dp/B0CHXFCYCR?language=en_GB"
                        },
                        new
                        {
                            Id = 10L,
                            CategoryId = 9L,
                            CreatedBy = "admin",
                            ImagePath = "https://ae-pic-a1.aliexpress-media.com/kf/See613671846f48ccba7a890a8efbe7a05/iPhone-15-Pro-Max-256GB-512GB-1TB-Dual-eSIM-6-7-Genuine-LTPO-Super-Retina-XDR.jpg",
                            Name = "iPhone 15 Pro Max 256GB/512GB/1TB Dual eSIM 6.7\" Genuine LTPO Super Retina XDR OLED Face ID NFC A17Pro 8GB 98% New 5G Cell Phone",
                            Price = 709m,
                            PriceUnit = "$",
                            StoreId = 4L,
                            Url = "https://www.aliexpress.com/item/1005007893612979.html?spm=a2g0o.productlist.main.25.eb42291ejzuZZJ&algo_pvid=243f2f67-93b3-436e-b290-e9eb57e49582&algo_exp_id=243f2f67-93b3-436e-b290-e9eb57e49582-12&pdp_npi=4%40dis%21TND%213862.560%213167.299%21%21%211248.00%211023.36%21%402141122217309344674181553e7a2d%2112000042744921902%21sea%21TN%210%21ABX&curPageLogUid=i7MgtMiDzT4s&utparam-url=scene%3Asearch%7Cquery_from%3A"
                        },
                        new
                        {
                            Id = 11L,
                            CategoryId = 9L,
                            CreatedBy = "admin",
                            ImagePath = "https://m.media-amazon.com/images/I/711wsjBtWeL._AC_SL1500_.jpg",
                            Name = "Apple iPhone 12, 256GB, White - (Refurbished) ",
                            Price = 709m,
                            PriceUnit = "$",
                            StoreId = 4L,
                            Url = "https://www.amazon.fr/-/en/dp/B08PCC743H/ref=sr_1_2?crid=1A6VUNFFEGUH&dib=eyJ2IjoiMSJ9.1pxt4S85q2lJWGtflE7yJHGBbd0LNA8qqu712gdan0UMhfFxGb4K0XeAaRjjHtNX-2HvFAqwbcNgbS68deV2LcHOdpN-IfNo9PxvZPDGO_5tRt_PYm5qCZahsxV8TLamYQmlzXIipx5S3plK3NnosvM9qoMClfNvK9z4jWdj_28NC7sfjoyVIvfzoGIqnhtqSyEl4d3OpT9Ztk3g-jVYcUu1IwkhLWy-CrBxVwl8ob8te0Mc-D9WdZzNutm0cXAHx2guk_O9AcnW_D59Kli2vicnmsKNvVK67NxGTfNLpMk.ZNfVCpdxi4gtp87BDncK0ovvfeGJaPigS0IfCjB8L8M&dib_tag=se&keywords=Iphone%2B15&qid=1730941701&sprefix=iphone%2B15%2Caps%2C180&sr=8-2&th=1"
                        },
                        new
                        {
                            Id = 12L,
                            CategoryId = 9L,
                            CreatedBy = "admin",
                            ImagePath = "https://m.media-amazon.com/images/I/71WcjsOVOmL.__AC_SX300_SY300_QL70_FMwebp_.jpg",
                            Name = "Samsung 24 Ultra",
                            Price = 1012.14m,
                            PriceUnit = "$",
                            StoreId = 1L,
                            Url = "https://www.amazon.com/SAMSUNG-Smartphone-Unlocked-Android-Titanium/dp/B0CMDM65JH"
                        },
                        new
                        {
                            Id = 13L,
                            CategoryId = 9L,
                            CreatedBy = "admin",
                            ImagePath = "https://pisces.bbystatic.com/image2/BestBuy_US/images/products/6569/6569875_sd.jpg;maxHeight=640;maxWidth=550;format=webp",
                            Name = "Samsung 24 Ultra",
                            Price = 1091.99m,
                            PriceUnit = "$",
                            StoreId = 3L,
                            Url = "https://www.bestbuy.com/site/samsung-galaxy-s24-ultra-512gb-unlocked-titanium-black/6569875.p?skuId=6569875"
                        },
                        new
                        {
                            Id = 14L,
                            CategoryId = 9L,
                            CreatedBy = "admin",
                            ImagePath = "https://www.ooredoo.tn/Personal/9085-large_default/portable-samsung-galaxy-s24-ultra.jpg",
                            Name = "Samsung 24 Ultra",
                            Price = 960.61m,
                            PriceUnit = "$",
                            StoreId = 4L,
                            Url = "https://www.aliexpress.com/item/1005006524667199.html"
                        });
                });

            modelBuilder.Entity("PriceAggregator.Core.Entities.Store", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<long?>("FeatureId")
                        .HasColumnType("bigint");

                    b.Property<string>("IconPath")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FeatureId");

                    b.ToTable("Stores", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedBy = "admin",
                            IconPath = "/images/store_icons/amazon_logo.png",
                            Name = "Amazon"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedBy = "admin",
                            IconPath = "/images/store_icons/stirling_sports.png",
                            Name = "Stirling Sports"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedBy = "admin",
                            IconPath = "/images/store_icons/best_buy_logo.png",
                            Name = "BestBuy"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedBy = "admin",
                            IconPath = "/images/store_icons/ali_express_logo.png",
                            Name = "AliExpress"
                        });
                });

            modelBuilder.Entity("PriceAggregator.Core.Entities.Category", b =>
                {
                    b.HasOne("PriceAggregator.Core.Entities.FeaturedItem", "FeaturedItem")
                        .WithMany("Categories")
                        .HasForeignKey("FeatureId");

                    b.Navigation("FeaturedItem");
                });

            modelBuilder.Entity("PriceAggregator.Core.Entities.Product", b =>
                {
                    b.HasOne("PriceAggregator.Core.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PriceAggregator.Core.Entities.FeaturedItem", "FeaturedItem")
                        .WithMany("Products")
                        .HasForeignKey("FeatureId");

                    b.HasOne("PriceAggregator.Core.Entities.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("FeaturedItem");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("PriceAggregator.Core.Entities.Store", b =>
                {
                    b.HasOne("PriceAggregator.Core.Entities.FeaturedItem", "FeaturedItem")
                        .WithMany("Stores")
                        .HasForeignKey("FeatureId");

                    b.Navigation("FeaturedItem");
                });

            modelBuilder.Entity("PriceAggregator.Core.Entities.FeaturedItem", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Products");

                    b.Navigation("Stores");
                });
#pragma warning restore 612, 618
        }
    }
}
